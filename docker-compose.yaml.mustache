version: "3.9"

networks:
  default:
    name: "edgebus-local-tier"

volumes:
  # Unused stub volume to prevent error "volumes must be a mapping" when all volumes disabled
  stub:
{{#PGADMIN_USEDATAVOLUME}}
  pgadmin-data:
{{/PGADMIN_USEDATAVOLUME}}
{{#POSTGRES_USEDATAVOLUME}}
  postgres-data:
{{/POSTGRES_USEDATAVOLUME}}
{{#REDIS_USEDATAVOLUME}}
  redis-data:
{{/REDIS_USEDATAVOLUME}}

services:
#
#  ___          __                   _                       _                     
# |_ _| _ __   / _| _ __  __ _  ___ | |_  _ __  _   _   ___ | |_  _   _  _ __  ___ 
#  | | | '_ \ | |_ | '__|/ _` |/ __|| __|| '__|| | | | / __|| __|| | | || '__|/ _ \
#  | | | | | ||  _|| |  | (_| |\__ \| |_ | |   | |_| || (__ | |_ | |_| || |  |  __/
# |___||_| |_||_|  |_|   \__,_||___/ \__||_|    \__,_| \___| \__| \__,_||_|   \___|
#                                                                                  
#

{{#HTTPDUMP_RUN}}
  httpdump:
    image: {{HTTPDUMP_IMAGE}}{{#HTTPDUMP_IMAGETAG}}:{{HTTPDUMP_IMAGETAG}}{{/HTTPDUMP_IMAGETAG}}
    hostname: "{{RUN_HOSTNAME}}"
    domainname: "{{RUN_DOMAIN}}"
    volumes:
      - ./.http-dump.local:/data
    networks:
      - default
    ports:
      - 127.0.0.1:52003:8080
{{/HTTPDUMP_RUN}}

{{#PGADMIN_RUN}}
  pgadmin:
    image: {{PGADMIN_IMAGE}}{{#PGADMIN_IMAGETAG}}:{{PGADMIN_IMAGETAG}}{{/PGADMIN_IMAGETAG}}
    hostname: "{{RUN_HOSTNAME}}"
    domainname: "{{RUN_DOMAIN}}"
    volumes:
{{#PGADMIN_USEDATAVOLUME}}
      - pgadmin-data:/var/lib/pgadmin
{{/PGADMIN_USEDATAVOLUME}}
      - ./configs/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - default
    ports:
      - 127.0.0.1:52010:80
    environment:
      - 'PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False'
      - 'PGADMIN_CONFIG_SERVER_MODE=False'
      - 'PGADMIN_BG_COLOR=#C0C0C0'
      - 'PGADMIN_DEFAULT_EMAIL=dev@in.cwtest.online'
      - 'PGADMIN_DEFAULT_PASSWORD=devel'
{{/PGADMIN_RUN}}

  postgres:
    image: {{POSTGRES_IMAGE}}{{#POSTGRES_IMAGETAG}}:{{POSTGRES_IMAGETAG}}{{/POSTGRES_IMAGETAG}}
    hostname: "{{RUN_HOSTNAME}}"
    domainname: "{{RUN_DOMAIN}}"
    volumes:
{{#POSTGRES_USEDATAVOLUME}}
      - postgres-data:/data
{{/POSTGRES_USEDATAVOLUME}}
      - ./dbseed/11-edgebus-users.sql:/dbseed/11-edgebus-users.sql
      - ./dbseed/12-edgebus-database.sql:/dbseed/12-edgebus-database.sql
{{#POSTGRES_USEDBSEED}}
      - ./dbseed/edgebus-local:/dbseed/edgebus-local
{{/POSTGRES_USEDBSEED}}
      - ./.gitignore:/tmp/.gitignore # This need for case no other volumes
    networks:
      - default
    ports:
      - 127.0.0.1:52000:5432/tcp

  redis:
    image: {{REDIS_IMAGE}}{{#REDIS_IMAGETAG}}:{{REDIS_IMAGETAG}}{{/REDIS_IMAGETAG}}
    hostname: "{{RUN_HOSTNAME}}"
    domainname: "{{RUN_DOMAIN}}"
{{#REDIS_USEDATAVOLUME}}
    volumes:
      - redis-data:/data
{{/REDIS_USEDATAVOLUME}}
    networks:
      - default
    ports:
      - 127.0.0.1:52001:6379/tcp

{{#REDISCOMMANDER_RUN}}
  redis-commander:
    image: {{REDISCOMMANDER_IMAGE}}{{#REDISCOMMANDER_IMAGETAG}}:{{REDISCOMMANDER_IMAGETAG}}{{/REDISCOMMANDER_IMAGETAG}}
    hostname: "{{RUN_HOSTNAME}}"
    domainname: "{{RUN_DOMAIN}}"
    depends_on:
      - redis
    networks:
      - default
    ports:
      - 127.0.0.1:52011:8081/tcp
    environment:
      - REDIS_HOSTS=0:redis:6379:0,1:redis:6379:1,2:redis:6379:2,3:redis:6379:3
      - 'REDIS_COMMANDER_BG_COLOR=#C0C0C0'
{{/REDISCOMMANDER_RUN}}

#
#  ____                 _    _                  
# |  _ \  _   _  _ __  | |_ (_) _ __ ___    ___ 
# | |_) || | | || '_ \ | __|| || '_ ` _ \  / _ \
# |  _ < | |_| || | | || |_ | || | | | | ||  __/
# |_| \_\ \__,_||_| |_| \__||_||_| |_| |_| \___|
#                                               
#

{{#EDGEBUS_TYPESCRIPT_RUN}}
  edgebus:
    networks:
      - default
    depends_on:
      - postgres
      - redis
    image: {{EDGEBUS_TYPESCRIPT_IMAGE}}{{#EDGEBUS_TYPESCRIPT_IMAGETAG}}:{{EDGEBUS_TYPESCRIPT_IMAGETAG}}{{/EDGEBUS_TYPESCRIPT_IMAGETAG}}
    hostname: "{{RUN_HOSTNAME}}"
    domainname: "{{RUN_DOMAIN}}"
    #entrypoint: [ "/usr/local/bin/docker-entrypoint-edgebus-api.sh" ]
    command: "--config-toml-file=/etc/edgebus/edgebus.toml --config-toml-file=/etc/edgebus/edgebus.local.toml --config-file=/etc/edgebus/edgebus.local.env --config-env"
    ports:
      - 127.0.0.1:12001:12001/tcp
      - 127.0.0.1:12003:12003/tcp
      - 127.0.0.1:12010:12010/tcp
      - 127.0.0.1:12011:12011/tcp
    volumes:
      - ./configs/edgebus/edgebus.toml:/etc/edgebus/edgebus.toml
      - ./configs/edgebus/edgebus.local.toml:/etc/edgebus/edgebus.local.toml
      - ./configs/edgebus/edgebus.local.env:/etc/edgebus/edgebus.local.env
    environment:
      # Sleeping before launch (waiting for PostgreSQL, Redis etc)
      DO_INIT_SLEEP: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
{{/EDGEBUS_TYPESCRIPT_RUN}}
{{^EDGEBUS_TYPESCRIPT_RUN}}
{{#IS_LINUX_HOST}}
  api:
    hostname: "{{RUN_HOSTNAME}}"
    domainname: "{{RUN_DOMAIN}}"
    networks:
      - default
    # it works for Linux ONLY
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure
    environment:
      - PORTS=12001,12003,12010,12011
{{/IS_LINUX_HOST}}
{{/EDGEBUS_TYPESCRIPT_RUN}}
